# Generated by Django 4.1.7 on 2023-03-26 22:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=100, unique=True, verbose_name="Email"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Full Name")),
                (
                    "role",
                    models.CharField(
                        choices=[("SU", "Superuser"), ("AD", "Admin")],
                        default="US",
                        max_length=2,
                        verbose_name="Role",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="Without spaces, only numbers. e.g. 0167893552",
                        max_length=25,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Without spaces, only numbers. e.g. 0167893552",
                                regex="^[0-9]+$",
                            )
                        ],
                        verbose_name="Phone Number",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Admin Management",
                "verbose_name_plural": "Admin Management",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="ScoreAPILog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.CharField(
                        blank=True, max_length=8, null=True, verbose_name="score"
                    ),
                ),
                (
                    "transaction_time",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Transaction Time"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "ScoreAPILog",
                "verbose_name_plural": "ScoreAPILog",
                "ordering": ("id",),
            },
        ),
    ]
